<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeProjectFlavorService">
    <option name="flavorId" value="CMakePlainProjectFlavor" />
  </component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="PscrLib" targetName="gmock_main" />
      <config projectName="PscrLib" targetName="gtest" />
      <config projectName="PscrLib" targetName="gtest_main" />
      <config projectName="PscrLib" targetName="PscrLib" />
      <config projectName="PscrLib" targetName="PscrLibTests" />
      <config projectName="PscrLib" targetName="gmock" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
      <configuration PROFILE_NAME="Release" ENABLED="true" CONFIG_NAME="Release" />
      <configuration PROFILE_NAME="RelWithDebInfo" ENABLED="true" CONFIG_NAME="RelWithDebInfo" />
      <configuration PROFILE_NAME="MinSizeRel" ENABLED="true" CONFIG_NAME="MinSizeRel" />
      <configuration PROFILE_NAME="Default" ENABLED="true" />
      <configuration PROFILE_NAME="Debug-Coverage" ENABLED="true" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_CXX_FLAGS=--coverage -DCMAKE_C_FLAGS=--coverage" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c7909a60-c39c-4020-a467-946ec1d93988" name="Changes" comment="add">
      <change afterPath="$PROJECT_DIR$/.clang-format" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.clang-tidy" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.name" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/runConfigurations/All_in_PscrLibTests.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/src/private/String.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/src/public/String.hpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/lib/test/test.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/PSCR-TME.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/PSCR-TME.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/customTargets.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/editor.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/editor.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/.idea/MyString.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/.idea/editor.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/.idea/jsonSchemas.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/TME1/MyString/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/TME1/MyString/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/TME1/MyString/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/TME2/tme2/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/TME2/tme2/CMakeLists.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug-Coverage" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/TME1/MyString/main.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/lib/src/private/String.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/lib/src/public/String.hpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/lib/test/test.cpp" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="2.2" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2mezQAEKozzqC6VPjiC2byQq5nY" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;CMake Application.MyApp.executor&quot;: &quot;Run&quot;,
    &quot;CMake Application.MyString.executor&quot;: &quot;Run&quot;,
    &quot;CMake Application.PscrLib.executor&quot;: &quot;Run&quot;,
    &quot;CMake Application.Tpe2.executor&quot;: &quot;Run&quot;,
    &quot;CMake Debug.MyString.executor&quot;: &quot;Debug&quot;,
    &quot;CTest Application.All CTest.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.All in PscrLib.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.All in PscrLibTests.executor&quot;: &quot;Valgrind&quot;,
    &quot;Google Test.PscrLibTests.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.StringTest.Constructor.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.StringTest.CopyAssignment.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.StringTest.CopyConstructor.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.RadMigrateCodeStyle&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;ctest.advertisement.all.test.configuration.is.created&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;dynamic.analysis.tools.valgrind&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lib/src" />
      <recent name="$PROJECT_DIR$/lib/public" />
      <recent name="$PROJECT_DIR$/lib/private" />
    </key>
  </component>
  <component name="RunManager" selected="Google Test.All in PscrLibTests">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringTest.Constructor" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="PscrLib" TARGET_NAME="PscrLibTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="PscrLib" RUN_TARGET_NAME="PscrLibTests" TEST_CLASS="StringTest" TEST_METHOD="Constructor" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringTest.CopyAssignment" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="PscrLib" TARGET_NAME="PscrLibTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="PscrLib" RUN_TARGET_NAME="PscrLibTests" TEST_CLASS="StringTest" TEST_METHOD="CopyAssignment" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="StringTest.CopyConstructor" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="PscrLib" TARGET_NAME="PscrLibTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="PscrLib" RUN_TARGET_NAME="PscrLibTests" TEST_CLASS="StringTest" TEST_METHOD="CopyConstructor" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="All CTest" type="CTestRunConfiguration" factoryName="CTestRun" PROGRAM_PARAMS="--extra-verbose" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" WORKING_DIR="file://$CMakeCurrentLocalGenerationDir$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_PATH="$CTestCurrentExecutableName$" EXPLICIT_BUILD_TARGET_NAME="all" TEST_MODE="PATTERN">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CTest Application.All CTest" />
      <item itemvalue="Google Test.All in PscrLibTests" />
      <item itemvalue="Google Test.StringTest.CopyConstructor" />
      <item itemvalue="Google Test.StringTest.Constructor" />
      <item itemvalue="Google Test.StringTest.CopyAssignment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Google Test.StringTest.CopyAssignment" />
        <item itemvalue="Google Test.StringTest.CopyConstructor" />
        <item itemvalue="Google Test.StringTest.Constructor" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c7909a60-c39c-4020-a467-946ec1d93988" name="Changes" comment="" />
      <created>1727451812939</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1727451812939</updated>
      <workItem from="1727451815261" duration="1550000" />
      <workItem from="1727453380967" duration="10393000" />
      <workItem from="1727466699563" duration="480000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="../../../Projects/cours/pscr/PSCR-TME/lib/cmake-build-debug-coverage" NAME="All in PscrLibTests Coverage Results" MODIFIED="1727466569996" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="gcov/llvm" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>